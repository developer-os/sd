<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd"
       default-lazy-init="true">
    <description>Shiro安全配置</description>
    <!--安全管理器-->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <!--设置自定义Realm-->
        <!--<property name="realm" ref="shiroDbRealm"/>-->
        <!--&lt;!&ndash;将缓存管理器，交给安全管理器&ndash;&gt;-->
        <!--<property name="cacheManager" ref="shiroEhcacheManager"/>-->
        <!--&lt;!&ndash; 记住密码管理 &ndash;&gt;-->
        <!--<property name="rememberMeManager" ref="rememberMeManager"/>-->
    </bean>

    <!-- 項目自定义的Realm -->
    <!--<bean id="shiroDbRealm" class="com.rocky.prom.commons.shiro.ShiroDbRealm"/>-->

    <!-- 记住密码Cookie -->
    <!--<bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">-->
        <!--<constructor-arg value="rememberMe"/>-->
        <!--<property name="httpOnly" value="true"/>-->
        <!--&lt;!&ndash; 7天,采用spring el计算方便修改[细节决定成败]！ &ndash;&gt;-->
        <!--<property name="maxAge" value="#{7 * 24 * 60 * 60}"/>-->
    <!--</bean>-->

    <!-- rememberMe管理器,cipherKey生成见{@code Base64Test.java} -->
    <!--<bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">-->
        <!--<property name="cipherKey" value="#{T(org.apache.shiro.codec.Base64).decode('5aaC5qKm5oqA5pyvAAAAAA==')}"/>-->
        <!--<property name="cookie" ref="rememberMeCookie"/>-->
    <!--</bean>-->

    <!-- Shiro Filter -->
    <!--<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">-->
        <!--&lt;!&ndash; 安全管理器 &ndash;&gt;-->
        <!--<property name="securityManager" ref="securityManager"/>-->
        <!--&lt;!&ndash; 默认的登陆访问url &ndash;&gt;-->
        <!--<property name="loginUrl" value="/login"/>-->
        <!--&lt;!&ndash; 登陆成功后跳转的url &ndash;&gt;-->
        <!--<property name="successUrl" value="/index"/>-->
        <!--&lt;!&ndash; 没有权限跳转的url &ndash;&gt;-->
        <!--<property name="unauthorizedUrl" value="/unauth"/>-->
        <!--<property name="filterChainDefinitions">-->
            <!--<value>-->
                <!--&lt;!&ndash; -->
                    <!--anon  不需要认证-->
                    <!--authc 需要认证-->
                    <!--user  验证通过或RememberMe登录的都可以-->
                <!--&ndash;&gt;-->
                <!--/commons/** = anon-->
                <!--/static/** = anon-->
                <!--/webhooks = anon-->
                <!--/login = anon-->
                <!--/** = user-->
            <!--</value>-->
        <!--</property>-->
    <!--</bean>-->

    <!-- 用户授权信息Cache, 采用EhCache -->
    <!--<bean id="shiroEhcacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">-->
        <!--<property name="cacheManagerConfigFile" value="classpath:ehcache-shiro.xml"/>-->
    <!--</bean>-->

    <!--&lt;!&ndash; 在方法中 注入  securityManager ，进行代理控制 &ndash;&gt;-->
    <!--<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">-->
        <!--<property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>-->
        <!--<property name="arguments" ref="securityManager"/>-->
    <!--</bean>-->

    <!--&lt;!&ndash; 保证实现了Shiro内部lifecycle函数的bean执行 &ndash;&gt;-->
    <!--<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>-->

    <!--&lt;!&ndash; AOP式方法级权限检查  &ndash;&gt;-->
    <!--<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"-->
          <!--depends-on="lifecycleBeanPostProcessor"/>-->

    <!--&lt;!&ndash; 启用shrio授权注解拦截方式 &ndash;&gt;-->
    <!--<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">-->
        <!--<property name="securityManager" ref="securityManager"/>-->
    <!--</bean>-->
</beans>